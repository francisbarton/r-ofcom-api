% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/district_query.R
\name{district_query}
\alias{district_query}
\title{Query Ofcom API for a sample of postcodes from a df or for a district}
\usage{
district_query(
  district = NULL,
  df = NULL,
  col = postcode,
  sample_by = NULL,
  return_errors = FALSE,
  ...
)
}
\arguments{
\item{district}{name of a local authority district in England or Wales. If NULL then a data frame of postcodes should be supplied instead. Will take priority over the df argument. Automatically samples by LSOA (supplying \code{prop = 1} to \code{...} will negate any effect of this, if undesired).}

\item{df}{default NULL. User-supplied data frame containing a postcode variable}

\item{col}{name of the postcode variable in the df. Defaults to "postcode"}

\item{sample_by}{character vector. Names of variables to group data by before sampling}

\item{return_errors}{mainly used as a debug mode. Defaults to FALSE, meaning the function will return a nice data frame of successful results. If you are not getting the results you expect, turn on return_errors and the function will instead return a list with results and errors}

\item{...}{arguments to pass to dplyr::slice_sample(). Either prop = proportion or n = number. If empty, will submit just 1 postcode (1 per group, if grouped). Use with sample_by in order to group data before sampling (eg sample 20\% of postcodes in each LSOA)}
}
\value{
either a tibble of successful results from the API, or a list of results and errors (if return_errors is set to TRUE)
}
\description{
Convenience wrapper around \code{query_api} that includes a way to get a nice
tibble of results from an input df, with the option to easily retrieve
data for all, or a sample of, postcodes in a local authority district.
}
